% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vdjPseudobulk.R
\name{vdjPseudobulk}
\alias{vdjPseudobulk}
\title{vdjPseudobulk}
\usage{
vdjPseudobulk(
  milo,
  pbs = NULL,
  col_to_bulk = NULL,
  extract_cols = c("v_call_abT_VDJ_main", "j_call_abT_VDJ_main", "v_call_abT_VJ_main",
    "j_call_abT_VJ_main"),
  mode_option = c("abT", "gdT", "B"),
  col_to_take = NULL,
  normalise = TRUE,
  renormalise = FALSE,
  min_count = 1L
)
}
\arguments{
\item{milo}{milo object or SingleCellExperiment object}

\item{pbs}{Optional binary matrix with cells as rows and pseudobulk groups as columns,
\itemize{
\item if milo is a milo object, no need to provide
\item if milo is a SingleCellExperiment object, user should only provide either pbs or col_to_bulk
}}

\item{col_to_bulk}{character or character vector, NULL by default
Optional colData column(s) to generate pbs, if multiple are provided, they will be combined
\itemize{
\item if milo is a milo object, no need to provide
\item if milo is a SingleCellExperiment object, user should only provide either pbs or col_to_bulk
}}

\item{extract_cols}{character vector
with default value c('v_call_abT_VDJ_main', 'j_call_abT_VDJ_main', 'v_call_abT_VJ_main', 'j_call_abT_VJ_main')
Column names where VDJ/VJ information is stored so that this will be used instead of the standard columns.}

\item{mode_option, }{must be one element of the vector c('B','abT','gdT'), 'abT' by default
Note: only when you set extract_cols to NULL, will this argument be considered!
Optional mode for extracting the V(D)J genes. If set as NULL, it will use e.g. v_call_VD` instead of v_call_abT_VDJ.}

\item{col_to_take}{str or a list of str, NULL by default
Optional obs column(s) to identify the most common value of for each pseudobulk.}

\item{normalise}{bool, True by default
If True, will scale the counts of each V(D)J gene group to 1 for each pseudobulk.}

\item{renormalise}{bool, False by default
If True, will re-scale the counts of each V(D)J gene group to 1 for each pseudobulk with any 'missing' calls removed.
Relevant with normalise as True, if setupVdjPseudobulk() was ran with remove_missing set to False.}

\item{min_count}{int, 1 by default
Pseudobulks with fewer than these many non-'missing' calls in a V(D)J gene group will have their non-'missing' calls set to 0 for that group. Relevant with normalise as True.}
}
\value{
SingleCellExperiment object ...
}
\description{
making pseudobulk vdj feature space
}
\examples{
sce_vdj <- setupVdjPseudobulk(sce_vdj, 
                                already.productive = FALSE)
# Build Milo Object
traj_milo <- miloR::Milo(sce_vdj)
milo_object <- miloR::buildGraph(traj_milo, k = 50, d = 20, reduced.dim = "X_scvi")
milo_object <- miloR::makeNhoods(milo_object, reduced_dims = "X_scvi", d = 20)

# Construct pseudobulked VDJ feature space
pb.milo <- vdjPseudobulk(milo_object, col_to_take = "anno_lvl_2_final_clean")
                                        
}
