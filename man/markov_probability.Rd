% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/markov_probability.R
\name{markov_probability}
\alias{markov_probability}
\title{markov_probability}
\usage{
markov_probability(
  milo,
  diffusionmap,
  diffusiontime,
  terminal_state,
  root_cell,
  scale_components = TRUE,
  num_waypoints = 500
)
}
\arguments{
\item{milo}{milo or SingelCellExperiment object, used to store the result}

\item{diffusionmap}{DiffusionMap object corresponds to milo}

\item{diffusiontime}{numeric vector, contain the difussion time of each pseudobulk}

\item{terminal_state}{the index of the terminal state}

\item{root_cell}{the index of the root state}

\item{scale_components}{logical,
If True, the components will be scale before constructing markov chain}

\item{num_waypoints}{integer, 500L by default.
\itemize{
\item Number of waypoints to sample to construct markov chain.
}}
}
\value{
milo or SinglCellExperiment object with pseudotime, probabilities in its colData
}
\description{
Preprocessing data and Construct markov chain and calculate probabilities
}
\examples{
sce_vdj <- setup_vdj_pseudobulk(sce_vdj, 
                                already.productive = FALSE)
# Build Milo Object                                 
traj_milo <- miloR::Milo(sce_vdj)
milo_object <- miloR::buildGraph(traj_milo, k = 50, d = 20, reduced.dim = "X_scvi")
milo_object <- miloR::makeNhoods(milo_object, reduced_dims = "X_scvi", d = 20)

# Construct Pseudobulked VDJ Feature Space
pb.milo <- vdj_pseudobulk(milo_object, col_to_take = "anno_lvl_2_final_clean")
pbs = milo_object@nhoods
pb.milo <- runPCA(pb.milo, assay.type = "X")

# Define root and branch tips
pca <- t(as.matrix(reducedDim(pb.milo, type = "PCA")))
branch.tips <- c(which.max(pca[2, ]), which.min(pca[2, ]))
names(branch.tips) <- c("CD8+T", "CD4+T")
root <- which.min(pca[1, ])

# Construct Diffusion Map
dm <- DiffusionMap(t(pca), n_pcs = 50, n_eigs = 10)

#Markov Chain Construction 
pb.milo <- markov_probability(milo = pb.milo, 
                              diffusionmap = dm, 
                              terminal_state = branch.tips, 
                              root_cell = root, 
                              pseudotime_key = "pseudotime")
                              
}
