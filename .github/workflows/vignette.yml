on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

name: vignette

env:
  cache-version: "cache-v1"

jobs:
  vignette:
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest }
    runs-on: ${{ matrix.config.os }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup R and Bioconductor
        uses: grimbough/bioc-actions/setup-bioc@v1
        id: install-r
        with:
          bioc-version: release

      - name: Get R version
        id: R
        run: |
          R --version > VERSION
          echo "version=$(head -1 VERSION | awk '{print $3}')" >> $GITHUB_OUTPUT
        shell: bash -l {0}

      - name: Get Bioconductor version
        id: BIOC
        run: |
          echo "version=$R_BIOC_VERSION" >> $GITHUB_OUTPUT
        shell: bash -l {0}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: /home/runner/work/_temp/Library
          key: ${{ env.cache-version }}-${{ matrix.config.os }}-biocversion-${{ steps.BIOC.outputs.version}}-r-${{ steps.R.outputs.version}}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ matrix.config.os }}-biocversion-${{ steps.BIOC.outputs.version}}-r-${{ steps.R.outputs.version}}-

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: pkgdown

      - name: Install package
        run: R CMD INSTALL .

      - name: Configure git
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Build and publish vignette
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'
        shell: bash -l {0}

      # If events is a PR, set subdir to 'preview/pr<pr_number>'
      - name: "[PR] Set documentation subdirectory"
        if: github.event_name == 'pull_request'
        run: |
          echo "PKGDOWN_DEV_MODE=unreleased" >> $GITHUB_ENV
          echo "subdir=preview/pr${{ github.event.number }}" >> $GITHUB_ENV

      - name: Deploy pkgdown site
        id: deploy
        shell: Rscript {0}
        run: |
          subdir <- "${{ env.subdir }}"
          pkg <- pkgdown::as_pkgdown(".")

          # Deploy pkgdown site to branch
          pkgdown::deploy_to_branch(subdir = if (nzchar(subdir)) subdir, clean = nzchar(subdir))

          # Report deployed site URL
          deployed_url <- file.path(pkg$meta$url, subdir)
          cat(sprintf('url=%s', deployed_url), file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)

      - name: Notify pkgdown deployment
        if: github.event_name == 'pull_request'
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: pkgdown-deploy
          append: false
          message: >
            :book: ${{ steps.deploy.outputs.url }}

            Preview documentation for this PR (at commit ${{ github.event.pull_request.head.sha }})

  vignette-pr-clean:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "gh-pages"

      - name: Clean up PR Preview
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"

          preview_dir="preview/pr${{ github.event.pull_request.number }}"
          if [ -d "$preview_dir" ]; then
            git rm -r $preview_dir
            git commit -m "Remove $preview_dir (GitHub Actions)" || echo 'No preview to remove'
            git push origin || echo 'No preview to remove'
          else
            echo 'No preview to remove'
          fi

      - name: Notify pkgdown cleanup
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: pkgdown-deploy
          message: |
            _:closed_book: Preview documentation for this PR has been cleaned up._
